{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<nav class=\"navbar navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <span class=\"navbar-brand h1\">Projects</span>\n  </div>\n</nav>\n\n<div class=\"container mt-3\">\n  <div class=\"row g-3\">\n    <div\n      class=\"col-12 col-sm-6 col-md-4 col-xl-3\"\n      *ngFor=\"let project of projects\"\n    >\n      <div class=\"card\" style=\"min-height: 320px\">\n        <img\n          [src]=\"project.image\"\n          class=\"card-img-top\"\n          [alt]=\"project.name\"\n          style=\"height: 150px; width: auto\"\n        />\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ project.name }}</h5>\n          <p class=\"card-text\">{{ project.description }}</p>\n        </div>\n        <div class=\"card-footer bg-white\">\n          <a [href]=\"project.url\" target=\"_blank\" class=\"btn btn-primary w-100\"\n            >Open</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\nexport interface Project {\n  name: string;\n  image: string;\n  url: string;\n  description: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  projects: Project[] = [\n    {\n      name: 'Calculator App',\n      image: 'assets/calculator.png',\n      url: 'https://yeminko.github.io/calculator-app',\n      description: 'Simple calculator app build with Angular.',\n    },\n    {\n      name: 'Todo App',\n      image: 'assets/todo.png',\n      url: 'https://yeminko.github.io/todo-app',\n      description: 'Simple todo app build with Angular.',\n    },\n    {\n      name: 'Note App',\n      image: 'assets/note.png',\n      url: 'https://yeminko.github.io/note-app',\n      description: 'Simple note taking app build with Angular.',\n    },\n    {\n      name: 'Mini POS',\n      image: 'assets/minipos.png',\n      url: 'https://yeminko.github.io/mini-pos',\n      description: 'Simple mini POS build with Angular.',\n    },\n    {\n      name: 'Text Finder',\n      image: 'assets/text-finder.png',\n      url: 'https://yeminko.github.io/text-finder',\n      description: 'Simple text finder app that build with Angular directive.',\n    },\n    {\n      name: 'Calendar App',\n      image: 'assets/calendar.png',\n      url: 'https://yeminko.github.io/calendar-app',\n      description:\n        'Simple calendar app that can manage events. Build with Angular and angular-calendar library.',\n    },\n  ];\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}